ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_flash.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c"
  19              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
  20              		.align	1
  21              		.weak	HAL_FLASH_EndOfOperationCallback
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_FLASH_EndOfOperationCallback:
  27              	.LVL0:
  28              	.LFB147:
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @file    stm32h7xx_hal_flash.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Program operations functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Memory Control functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Peripheral Errors functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  @verbatim
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ==============================================================================
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                         ##### FLASH peripheral features #####
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ==============================================================================
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   [..] The Flash memory interface manages CPU AXI I-Code and D-Code accesses
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        and the read and write protection mechanisms.
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   [..] The FLASH main features are:
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Flash memory read operations
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Flash memory program/erase operations
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Read / write protections
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Option bytes programming
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Error code correction (ECC) : Data in flash are 266-bits word
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****           (10 bits added per flash word)
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                         ##### How to use this driver #####
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ==============================================================================
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 2


  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       memory of all STM32H7xx devices.
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) FLASH Memory IO Programming functions:
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Program functions: 256-bit word only
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) There Two modes of programming :
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) Interrupts and flags management functions :
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Callback functions are called when the flash operations are finished :
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_EndOfOperationCallback() when everything is ok, otherwise
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_OperationErrorCallback()
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Get error flag status by calling HAL_FLASH_GetError()
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) Option bytes management functions :
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Lock and Unlock the option bytes using HAL_FLASH_OB_Unlock() and
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_OB_Lock() functions
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Launch the reload of the option bytes using HAL_FLASH_OB_Launch() function.
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 In this case, a reset is generated
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       to handle the following operations:
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Set the latency
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Enable/Disable the FLASH interrupts
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Monitor the FLASH flags status
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      [..]
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) For any Flash memory program operation (erase or program), the CPU clock frequency
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         (HCLK) must be at least 1MHz.
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) The contents of the Flash memory are not guaranteed if a device reset occurs during
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         a Flash memory operation.
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) The application can simultaneously request a read and a write operation through each AXI
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         interface.
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         As the Flash memory is divided into two independent banks, the embedded Flash
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         memory interface can drive different operations at the same time on each bank. For
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         example a read, write or erase operation can be executed on bank 1 while another read,
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         write or erase operation is executed on bank 2.
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  @endverbatim
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @attention
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * Copyright (c) 2017 STMicroelectronics.
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * All rights reserved.
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * the root directory of this software component.
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #include "stm32h7xx_hal.h"
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 3


  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup STM32H7xx_HAL_Driver
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH FLASH
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief FLASH HAL module driver
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private define ------------------------------------------------------------*/
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Constants
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #define FLASH_TIMEOUT_VALUE              50000U /* 50 s */
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private macro -------------------------------------------------------------*/
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Variables
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** FLASH_ProcessTypeDef pFlash;
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Exported functions ---------------------------------------------------------*/
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported functions
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *  @brief   Programming operation functions
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                   ##### Programming operation functions #####
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     program operations.
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Program a flash word at a specified address
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter can be a value of @ref FLASH_Type_Program
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  FlashAddress specifies the address to be programmed.
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 4


 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter shall be aligned to the Flash word:
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 256 bits for STM32H74x/5X devices (8x 32bits words)
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 128 bits for STM32H7Ax/BX devices (4x 32bits words)
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 256 bits for STM32H72x/3X devices (8x 32bits words)
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  DataAddress specifies the address of data to be programmed.
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter shall be 32-bit aligned
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t FlashAddress, uint32_t DataAddre
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t *)FlashAddress;
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check the parameters */
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Locked */
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress)) || (IS_FLASH_PROGRAM_ADDRESS_OTP(FlashAddress))
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress))
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_1;
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Prevent unused argument(s) compilation warning */
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     UNUSED(TypeProgram);
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else if(IS_FLASH_PROGRAM_ADDRESS_BANK2(FlashAddress))
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_2;
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Reset error code */
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(status == HAL_OK)
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(bank == FLASH_BANK_1)
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 5


 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set OTP_PG bit */
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set PG bit */
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->CR1, FLASH_CR_PG);
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR2, FLASH_CR_PG);
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else /* Single Bank */
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set OTP_PG bit */
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set PG bit */
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->CR1, FLASH_CR_PG);
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Program an OTP word (16 bits) */
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       *(__IO uint16_t *)FlashAddress = *(__IO uint16_t*)DataAddress;
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Program the flash word */
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       do
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         *dest_addr = *src_addr;
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         src_addr++;
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         row_index--;
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      } while (row_index != 0U);
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 6


 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Wait for last operation to be completed */
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the OTP_PG */
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(bank == FLASH_BANK_1)
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* If the program operation is completed, disable the PG */
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         CLEAR_BIT(FLASH->CR1, FLASH_CR_PG);
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* If the program operation is completed, disable the PG */
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         CLEAR_BIT(FLASH->CR2, FLASH_CR_PG);
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else /* Single Bank */
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the OTP_PG */
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the PG */
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->CR1, FLASH_CR_PG);
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Unlocked */
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Program a flash word at a specified address with interrupt enabled.
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                      This parameter can be a value of @ref FLASH_Type_Program
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  FlashAddress specifies the address to be programmed.
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter shall be aligned to the Flash word:
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 256 bits for STM32H74x/5X devices (8x 32bits words)
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 128 bits for STM32H7Ax/BX devices (4x 32bits words)
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 256 bits for STM32H72x/3X devices (8x 32bits words)
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  DataAddress specifies the address of data to be programmed.
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter shall be 32-bit aligned
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 7


 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t FlashAddress, uint32_t DataAd
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t*)FlashAddress;
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check the parameters */
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Locked */
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Reset error code */
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress)) || (IS_FLASH_PROGRAM_ADDRESS_OTP(FlashAddress))
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress))
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_1;
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Prevent unused argument(s) compilation warning */
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     UNUSED(TypeProgram);
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else if(IS_FLASH_PROGRAM_ADDRESS_BANK2(FlashAddress))
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_2;
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (status != HAL_OK)
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Process Unlocked */
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.Address = FlashAddress;
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(bank == FLASH_BANK_1)
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 8


 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set internal variables used by the IRQ handler */
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK1;
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set OTP_PG bit */
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set PG bit */
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->CR1, FLASH_CR_PG);
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Enable End of Operation and Error interrupts for Bank 1 */
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_CR_OPERRIE)
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_B
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1);
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_CR_OPERRIE */
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set internal variables used by the IRQ handler */
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK2;
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR2, FLASH_CR_PG);
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Enable End of Operation and Error interrupts for Bank2 */
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_CR_OPERRIE)
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK2(FLASH_IT_EOP_BANK2     | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_B
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK2(FLASH_IT_EOP_BANK2     | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2);
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_CR_OPERRIE */
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else /* Single Bank */
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Set internal variables used by the IRQ handler */
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK1;
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set OTP_PG bit */
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR1, FLASH_CR_PG);
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 9


 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Enable End of Operation and Error interrupts for Bank 1 */
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_CR_OPERRIE)
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_B
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1);
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_CR_OPERRIE */
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Program an OTP word (16 bits) */
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       *(__IO uint16_t *)FlashAddress = *(__IO uint16_t*)DataAddress;
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Program the flash word */
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       do
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         *dest_addr = *src_addr;
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         src_addr++;
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         row_index--;
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       } while (row_index != 0U);
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief This function handles FLASH interrupt request.
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t temp;
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t errorflag;
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   FLASH_ProcedureTypeDef procedure;
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank1 End of Operation flag  */
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_SR_EOP) != RESET)
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE_BANK1)
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Nb of sector to erased can be decreased */
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 10


 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.NbSectorsToErase--;
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Check if there are still sectors to erase */
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(pFlash.NbSectorsToErase != 0U)
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Indicate user which sector has been erased */
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear bank 1 End of Operation pending bit */
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Increment sector number */
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector++;
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_1, pFlash.VoltageForErase);
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* No more sectors to Erase, user callback can be called */
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Reset Sector and stop Erase sectors procedure */
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector = 0xFFFFFFFFU;
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       procedure = pFlash.ProcedureOnGoing;
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure == FLASH_PROC_MASSERASE_BANK1) || (procedure == FLASH_PROC_ALLBANK_MASSERASE))
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* MassErase ended. Return the selected bank */
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(FLASH_BANK_1);
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else if(procedure == FLASH_PROC_PROGRAM_BANK1)
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Program ended. Return the selected address */
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Nothing to do */
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure != FLASH_PROC_SECTERASE_BANK2) && \
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK2) && \
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK2))
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 11


 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  /* Check FLASH Bank2 End of Operation flag  */
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG_BANK2(FLASH_SR_EOP) != RESET)
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE_BANK2)
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*Nb of sector to erased can be decreased*/
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.NbSectorsToErase--;
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Check if there are still sectors to erase*/
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(pFlash.NbSectorsToErase != 0U)
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Indicate user which sector has been erased*/
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear bank 2 End of Operation pending bit */
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Increment sector number*/
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector++;
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_2, pFlash.VoltageForErase);
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* No more sectors to Erase, user callback can be called */
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Reset Sector and stop Erase sectors procedure */
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector = 0xFFFFFFFFU;
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       procedure = pFlash.ProcedureOnGoing;
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure == FLASH_PROC_MASSERASE_BANK2) || (procedure == FLASH_PROC_ALLBANK_MASSERASE))
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*MassErase ended. Return the selected bank*/
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(FLASH_BANK_2);
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else if(procedure == FLASH_PROC_PROGRAM_BANK2)
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Program ended. Return the selected address */
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 12


 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Nothing to do */
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure != FLASH_PROC_SECTERASE_BANK1) && \
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK1) && \
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK1))
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank1 operation error flags */
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_SR_OPERR)
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR1 & (FLASH_FLAG_WRPERR_BANK1 | FLASH_FLAG_PGSERR_BANK1 | FLASH_FLAG_STRBERR_
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1 | FLASH_FLAG_OPERR_BANK1);
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR1 & (FLASH_FLAG_WRPERR_BANK1 | FLASH_FLAG_PGSERR_BANK1 | FLASH_FLAG_STRBERR_
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1);
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_SR_OPERR */
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0U)
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= errorflag;
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK1(errorflag);
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     procedure = pFlash.ProcedureOnGoing;
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(procedure == FLASH_PROC_SECTERASE_BANK1)
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Return the faulty sector */
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Sector;
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else if((procedure == FLASH_PROC_MASSERASE_BANK1) || (procedure == FLASH_PROC_ALLBANK_MASSERASE
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Return the faulty bank */
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = FLASH_BANK_1;
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Return the faulty address */
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Address;
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Stop the procedure ongoing*/
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 13


 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if (USE_FLASH_ECC == 1U)
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank1 ECC single correction error flag */
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR1 & FLASH_FLAG_SNECCERR_BANK1;
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0U)
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= errorflag;
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Call User callback */
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASHEx_EccCorrectionCallback();
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear FLASH Bank1 ECC single correction error flag in order to allow new ECC error record */
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK1(errorflag);
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank1 ECC double detection error flag */
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR1 & FLASH_FLAG_DBECCERR_BANK1;
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0U)
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= errorflag;
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Call User callback */
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASHEx_EccDetectionCallback();
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear FLASH Bank1 ECC double detection error flag in order to allow new ECC error record */
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK1(errorflag);
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* USE_FLASH_ECC */
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank2 operation error flags */
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_SR_OPERR)
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR2 & ((FLASH_FLAG_WRPERR_BANK2 | FLASH_FLAG_PGSERR_BANK2 | FLASH_FLAG_STRBERR
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                              FLASH_FLAG_INCERR_BANK2 | FLASH_FLAG_OPERR_BANK2) & 0x7FFFFFFFU);
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR2 & ((FLASH_FLAG_WRPERR_BANK2 | FLASH_FLAG_PGSERR_BANK2 | FLASH_FLAG_STRBERR
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                              FLASH_FLAG_INCERR_BANK2) & 0x7FFFFFFFU);
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_SR_OPERR */
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0U)
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= (errorflag | 0x80000000U);
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK2(errorflag);
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     procedure = pFlash.ProcedureOnGoing;
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(procedure== FLASH_PROC_SECTERASE_BANK2)
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 14


 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty sector*/
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Sector;
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else if((procedure == FLASH_PROC_MASSERASE_BANK2) || (procedure == FLASH_PROC_ALLBANK_MASSERASE
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty bank*/
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = FLASH_BANK_2;
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty address*/
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Address;
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Stop the procedure ongoing*/
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if (USE_FLASH_ECC == 1U)
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank2 ECC single correction error flag */
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR2 & FLASH_FLAG_SNECCERR_BANK2;
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0U)
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= (errorflag | 0x80000000U);
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Call User callback */
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASHEx_EccCorrectionCallback();
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear FLASH Bank2 ECC single correction error flag in order to allow new ECC error record */
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK2(errorflag);
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank2 ECC double detection error flag */
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR2 & FLASH_FLAG_DBECCERR_BANK2;
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0U)
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= (errorflag | 0x80000000U);
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Call User callback */
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASHEx_EccDetectionCallback();
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear FLASH Bank2 ECC double detection error flag in order to allow new ECC error record */
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK2(errorflag);
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* USE_FLASH_ECC */
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 15


 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(pFlash.ProcedureOnGoing == FLASH_PROC_NONE)
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_CR_OPERRIE)
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank1 Operation and Error source interrupt */
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK1(FLASH_IT_EOP_BANK1    | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_BA
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_BA
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank2 Operation and Error source interrupt */
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK2(FLASH_IT_EOP_BANK2    | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_BA
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_BA
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank1 Operation and Error source interrupt */
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK1(FLASH_IT_EOP_BANK1    | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_BA
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1);
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank2 Operation and Error source interrupt */
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK2(FLASH_IT_EOP_BANK2    | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_BA
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2);
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_CR_OPERRIE */
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Process Unlocked */
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Mass Erase: Bank number which has been requested to erase
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Sectors Erase: Sector which has been erased
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                    (if 0xFFFFFFFF, it means that all the selected sectors have been erased)
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Program: Address which was selected for data program
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
  29              		.loc 1 811 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   UNUSED(ReturnValue);
  34              		.loc 1 813 3 view .LVU1
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    */
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
  35              		.loc 1 818 1 is_stmt 0 view .LVU2
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE147:
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 16


  40              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
  41              		.align	1
  42              		.weak	HAL_FLASH_OperationErrorCallback
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	HAL_FLASH_OperationErrorCallback:
  48              	.LVL1:
  49              	.LFB148:
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Mass Erase: Bank number which has been requested to erase
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Sectors Erase: Sector number which returned an error
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Program: Address which was selected for data program
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
  50              		.loc 1 829 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   UNUSED(ReturnValue);
  55              		.loc 1 831 3 view .LVU4
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    */
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
  56              		.loc 1 836 1 is_stmt 0 view .LVU5
  57 0000 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE148:
  61              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
  62              		.align	1
  63              		.global	HAL_FLASH_IRQHandler
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  68              	HAL_FLASH_IRQHandler:
  69              	.LFB146:
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t temp;
  70              		.loc 1 476 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74 0000 10B5     		push	{r4, lr}
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t errorflag;
  78              		.loc 1 477 3 view .LVU7
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   FLASH_ProcedureTypeDef procedure;
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 17


  79              		.loc 1 478 3 view .LVU8
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  80              		.loc 1 479 3 view .LVU9
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
  81              		.loc 1 482 3 view .LVU10
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
  82              		.loc 1 482 6 is_stmt 0 view .LVU11
  83 0002 3C4B     		ldr	r3, .L19
  84 0004 1B69     		ldr	r3, [r3, #16]
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
  85              		.loc 1 482 5 view .LVU12
  86 0006 13F4803F 		tst	r3, #65536
  87 000a 17D0     		beq	.L4
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  88              		.loc 1 484 5 is_stmt 1 view .LVU13
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  89              		.loc 1 484 14 is_stmt 0 view .LVU14
  90 000c 3A4B     		ldr	r3, .L19+4
  91 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  92              		.loc 1 484 7 view .LVU15
  93 0010 012B     		cmp	r3, #1
  94 0012 29D0     		beq	.L15
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  95              		.loc 1 519 7 is_stmt 1 view .LVU16
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  96              		.loc 1 519 17 is_stmt 0 view .LVU17
  97 0014 384B     		ldr	r3, .L19+4
  98 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  99 0018 DCB2     		uxtb	r4, r3
 100              	.LVL2:
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 101              		.loc 1 521 7 is_stmt 1 view .LVU18
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 102              		.loc 1 521 9 is_stmt 0 view .LVU19
 103 001a 072B     		cmp	r3, #7
 104 001c 18BF     		it	ne
 105 001e 022B     		cmpne	r3, #2
 106 0020 47D0     		beq	.L16
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 107              		.loc 1 527 12 is_stmt 1 view .LVU20
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 108              		.loc 1 527 14 is_stmt 0 view .LVU21
 109 0022 032C     		cmp	r4, #3
 110 0024 49D0     		beq	.L17
 111              	.L8:
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 112              		.loc 1 536 7 is_stmt 1 view .LVU22
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK2) && \
 113              		.loc 1 538 7 view .LVU23
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK2))
 114              		.loc 1 539 52 is_stmt 0 view .LVU24
 115 0026 043C     		subs	r4, r4, #4
 116              	.LVL3:
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK2))
 117              		.loc 1 539 52 view .LVU25
 118 0028 E4B2     		uxtb	r4, r4
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 18


 119              	.LVL4:
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK2) && \
 120              		.loc 1 538 9 view .LVU26
 121 002a 022C     		cmp	r4, #2
 122 002c 06D9     		bls	.L4
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 123              		.loc 1 542 9 is_stmt 1 view .LVU27
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 124              		.loc 1 542 33 is_stmt 0 view .LVU28
 125 002e 324B     		ldr	r3, .L19+4
 126 0030 0022     		movs	r2, #0
 127 0032 1A70     		strb	r2, [r3]
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 128              		.loc 1 544 9 is_stmt 1 view .LVU29
 129 0034 2F4B     		ldr	r3, .L19
 130 0036 4FF48032 		mov	r2, #65536
 131 003a 5A61     		str	r2, [r3, #20]
 132              	.LVL5:
 133              	.L4:
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1);
 134              		.loc 1 624 3 view .LVU30
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1);
 135              		.loc 1 624 20 is_stmt 0 view .LVU31
 136 003c 2D4B     		ldr	r3, .L19
 137 003e 1B69     		ldr	r3, [r3, #16]
 138              	.LVL6:
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 139              		.loc 1 628 3 is_stmt 1 view .LVU32
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 140              		.loc 1 628 5 is_stmt 0 view .LVU33
 141 0040 13F43813 		ands	r3, r3, #3014656
 142              	.LVL7:
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 143              		.loc 1 628 5 view .LVU34
 144 0044 48D0     		beq	.L9
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 145              		.loc 1 631 5 is_stmt 1 view .LVU35
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 146              		.loc 1 631 11 is_stmt 0 view .LVU36
 147 0046 2C4A     		ldr	r2, .L19+4
 148 0048 9169     		ldr	r1, [r2, #24]
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 149              		.loc 1 631 22 view .LVU37
 150 004a 1943     		orrs	r1, r1, r3
 151 004c 9161     		str	r1, [r2, #24]
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 152              		.loc 1 634 5 is_stmt 1 view .LVU38
 153 004e 2949     		ldr	r1, .L19
 154 0050 4B61     		str	r3, [r1, #20]
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 155              		.loc 1 636 5 view .LVU39
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 156              		.loc 1 636 15 is_stmt 0 view .LVU40
 157 0052 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 158              	.LVL8:
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 159              		.loc 1 636 15 view .LVU41
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 19


 160 0054 DAB2     		uxtb	r2, r3
 161              	.LVL9:
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 162              		.loc 1 638 5 is_stmt 1 view .LVU42
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 163              		.loc 1 638 7 is_stmt 0 view .LVU43
 164 0056 012B     		cmp	r3, #1
 165 0058 34D0     		beq	.L18
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 166              		.loc 1 644 10 is_stmt 1 view .LVU44
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 167              		.loc 1 644 12 is_stmt 0 view .LVU45
 168 005a 072A     		cmp	r2, #7
 169 005c 18BF     		it	ne
 170 005e 022A     		cmpne	r2, #2
 171 0060 46D0     		beq	.L13
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 172              		.loc 1 652 7 is_stmt 1 view .LVU46
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 173              		.loc 1 652 12 is_stmt 0 view .LVU47
 174 0062 254B     		ldr	r3, .L19+4
 175 0064 1869     		ldr	r0, [r3, #16]
 176              	.LVL10:
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 177              		.loc 1 652 12 view .LVU48
 178 0066 32E0     		b	.L11
 179              	.LVL11:
 180              	.L15:
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 181              		.loc 1 487 7 is_stmt 1 view .LVU49
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 182              		.loc 1 487 13 is_stmt 0 view .LVU50
 183 0068 234B     		ldr	r3, .L19+4
 184 006a 5A68     		ldr	r2, [r3, #4]
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 185              		.loc 1 487 30 view .LVU51
 186 006c 013A     		subs	r2, r2, #1
 187 006e 5A60     		str	r2, [r3, #4]
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 188              		.loc 1 490 7 is_stmt 1 view .LVU52
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 189              		.loc 1 490 16 is_stmt 0 view .LVU53
 190 0070 5B68     		ldr	r3, [r3, #4]
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 191              		.loc 1 490 9 view .LVU54
 192 0072 83B1     		cbz	r3, .L6
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 193              		.loc 1 493 9 is_stmt 1 view .LVU55
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 194              		.loc 1 493 48 is_stmt 0 view .LVU56
 195 0074 204C     		ldr	r4, .L19+4
 196 0076 E068     		ldr	r0, [r4, #12]
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 197              		.loc 1 493 9 view .LVU57
 198 0078 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 199              	.LVL12:
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 20


 200              		.loc 1 496 9 is_stmt 1 view .LVU58
 201 007c 1D4B     		ldr	r3, .L19
 202 007e 4FF48032 		mov	r2, #65536
 203 0082 5A61     		str	r2, [r3, #20]
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 204              		.loc 1 499 9 view .LVU59
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 205              		.loc 1 499 15 is_stmt 0 view .LVU60
 206 0084 E368     		ldr	r3, [r4, #12]
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 207              		.loc 1 499 22 view .LVU61
 208 0086 0133     		adds	r3, r3, #1
 209 0088 E360     		str	r3, [r4, #12]
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_1, pFlash.VoltageForErase);
 210              		.loc 1 500 9 is_stmt 1 view .LVU62
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_1, pFlash.VoltageForErase);
 211              		.loc 1 500 14 is_stmt 0 view .LVU63
 212 008a E068     		ldr	r0, [r4, #12]
 213              	.LVL13:
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 214              		.loc 1 501 9 is_stmt 1 view .LVU64
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 215              		.loc 1 501 54 is_stmt 0 view .LVU65
 216 008c A268     		ldr	r2, [r4, #8]
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 217              		.loc 1 501 9 view .LVU66
 218 008e 0121     		movs	r1, #1
 219 0090 FFF7FEFF 		bl	FLASH_Erase_Sector
 220              	.LVL14:
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 221              		.loc 1 501 9 view .LVU67
 222 0094 D2E7     		b	.L4
 223              	.LVL15:
 224              	.L6:
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 225              		.loc 1 507 9 is_stmt 1 view .LVU68
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 226              		.loc 1 507 23 is_stmt 0 view .LVU69
 227 0096 184B     		ldr	r3, .L19+4
 228 0098 4FF0FF32 		mov	r2, #-1
 229 009c DA60     		str	r2, [r3, #12]
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 230              		.loc 1 508 9 is_stmt 1 view .LVU70
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 231              		.loc 1 508 33 is_stmt 0 view .LVU71
 232 009e 0022     		movs	r2, #0
 233 00a0 1A70     		strb	r2, [r3]
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 234              		.loc 1 511 9 is_stmt 1 view .LVU72
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 235              		.loc 1 511 48 is_stmt 0 view .LVU73
 236 00a2 D868     		ldr	r0, [r3, #12]
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 237              		.loc 1 511 9 view .LVU74
 238 00a4 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 239              	.LVL16:
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 21


 240              		.loc 1 514 9 is_stmt 1 view .LVU75
 241 00a8 124B     		ldr	r3, .L19
 242 00aa 4FF48032 		mov	r2, #65536
 243 00ae 5A61     		str	r2, [r3, #20]
 244 00b0 C4E7     		b	.L4
 245              	.LVL17:
 246              	.L16:
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 247              		.loc 1 525 9 view .LVU76
 248 00b2 0120     		movs	r0, #1
 249 00b4 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 250              	.LVL18:
 251 00b8 B5E7     		b	.L8
 252              	.L17:
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 253              		.loc 1 531 9 view .LVU77
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 254              		.loc 1 531 48 is_stmt 0 view .LVU78
 255 00ba 0F4B     		ldr	r3, .L19+4
 256 00bc 1869     		ldr	r0, [r3, #16]
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 257              		.loc 1 531 9 view .LVU79
 258 00be FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 259              	.LVL19:
 260 00c2 B0E7     		b	.L8
 261              	.LVL20:
 262              	.L18:
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 263              		.loc 1 641 7 is_stmt 1 view .LVU80
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 264              		.loc 1 641 12 is_stmt 0 view .LVU81
 265 00c4 0C4B     		ldr	r3, .L19+4
 266 00c6 D868     		ldr	r0, [r3, #12]
 267              	.LVL21:
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 268              		.loc 1 642 7 is_stmt 1 view .LVU82
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 269              		.loc 1 642 21 is_stmt 0 view .LVU83
 270 00c8 4FF0FF32 		mov	r2, #-1
 271              	.LVL22:
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 272              		.loc 1 642 21 view .LVU84
 273 00cc DA60     		str	r2, [r3, #12]
 274              	.LVL23:
 275              	.L11:
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 276              		.loc 1 656 5 is_stmt 1 view .LVU85
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 277              		.loc 1 656 29 is_stmt 0 view .LVU86
 278 00ce 0A4B     		ldr	r3, .L19+4
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 279              		.loc 1 656 29 view .LVU87
 280 00d0 0022     		movs	r2, #0
 281 00d2 1A70     		strb	r2, [r3]
 282              	.LVL24:
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 283              		.loc 1 659 5 is_stmt 1 view .LVU88
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 22


 284 00d4 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 285              	.LVL25:
 286              	.L9:
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 287              		.loc 1 772 3 view .LVU89
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 288              		.loc 1 772 12 is_stmt 0 view .LVU90
 289 00d8 074B     		ldr	r3, .L19+4
 290 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 291              		.loc 1 772 5 view .LVU91
 292 00dc 3BB9     		cbnz	r3, .L3
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1);
 293              		.loc 1 786 5 is_stmt 1 view .LVU92
 294 00de 054A     		ldr	r2, .L19
 295 00e0 D368     		ldr	r3, [r2, #12]
 296 00e2 23F43C13 		bic	r3, r3, #3080192
 297 00e6 D360     		str	r3, [r2, #12]
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 298              		.loc 1 797 5 view .LVU93
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 299              		.loc 1 797 5 view .LVU94
 300 00e8 034B     		ldr	r3, .L19+4
 301 00ea 0022     		movs	r2, #0
 302 00ec 1A75     		strb	r2, [r3, #20]
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 303              		.loc 1 797 5 discriminator 1 view .LVU95
 304              	.L3:
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 305              		.loc 1 799 1 is_stmt 0 view .LVU96
 306 00ee 10BD     		pop	{r4, pc}
 307              	.LVL26:
 308              	.L13:
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 309              		.loc 1 647 12 view .LVU97
 310 00f0 0120     		movs	r0, #1
 311 00f2 ECE7     		b	.L11
 312              	.L20:
 313              		.align	2
 314              	.L19:
 315 00f4 00200052 		.word	1375739904
 316 00f8 00000000 		.word	pFlash
 317              		.cfi_endproc
 318              	.LFE146:
 320              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 321              		.align	1
 322              		.global	HAL_FLASH_Unlock
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	HAL_FLASH_Unlock:
 328              	.LFB149:
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 23


 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *  @brief   Management functions
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                       ##### Peripheral Control functions #####
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     memory operations.
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Unlock the FLASH control registers access
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 329              		.loc 1 862 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != 0U)
 334              		.loc 1 863 3 view .LVU99
 335              		.loc 1 863 6 is_stmt 0 view .LVU100
 336 0000 0A4B     		ldr	r3, .L25
 337 0002 DB68     		ldr	r3, [r3, #12]
 338              		.loc 1 863 5 view .LVU101
 339 0004 13F0010F 		tst	r3, #1
 340 0008 0BD0     		beq	.L23
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorize the FLASH Bank1 Registers access */
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY1);
 341              		.loc 1 866 5 is_stmt 1 view .LVU102
 342 000a 084B     		ldr	r3, .L25
 343 000c 084A     		ldr	r2, .L25+4
 344 000e 5A60     		str	r2, [r3, #4]
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY2);
 345              		.loc 1 867 5 view .LVU103
 346 0010 02F18832 		add	r2, r2, #-2004318072
 347 0014 5A60     		str	r2, [r3, #4]
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Verify Flash Bank1 is unlocked */
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != 0U)
 348              		.loc 1 870 5 view .LVU104
 349              		.loc 1 870 9 is_stmt 0 view .LVU105
 350 0016 DB68     		ldr	r3, [r3, #12]
 351              		.loc 1 870 8 view .LVU106
 352 0018 13F0010F 		tst	r3, #1
 353 001c 03D1     		bne	.L24
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 24


 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != 0U)
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorize the FLASH Bank2 Registers access */
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY1);
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY2);
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Verify Flash Bank2 is unlocked */
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != 0U)
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 354              		.loc 1 891 10 view .LVU107
 355 001e 0020     		movs	r0, #0
 356 0020 7047     		bx	lr
 357              	.L23:
 358 0022 0020     		movs	r0, #0
 359 0024 7047     		bx	lr
 360              	.L24:
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 361              		.loc 1 872 14 view .LVU108
 362 0026 0120     		movs	r0, #1
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 363              		.loc 1 892 1 view .LVU109
 364 0028 7047     		bx	lr
 365              	.L26:
 366 002a 00BF     		.align	2
 367              	.L25:
 368 002c 00200052 		.word	1375739904
 369 0030 23016745 		.word	1164378403
 370              		.cfi_endproc
 371              	.LFE149:
 373              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 374              		.align	1
 375              		.global	HAL_FLASH_Lock
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 380              	HAL_FLASH_Lock:
 381              	.LFB150:
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Locks the FLASH control registers access
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 382              		.loc 1 899 1 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 25


 386              		@ link register save eliminated.
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Bank1 Control Register access */
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->CR1, FLASH_CR_LOCK);
 387              		.loc 1 901 3 view .LVU111
 388 0000 064B     		ldr	r3, .L30
 389 0002 DA68     		ldr	r2, [r3, #12]
 390 0004 42F00102 		orr	r2, r2, #1
 391 0008 DA60     		str	r2, [r3, #12]
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Verify Flash Bank1 is locked */
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (READ_BIT(FLASH->CR1, FLASH_CR_LOCK) == 0U)
 392              		.loc 1 904 3 view .LVU112
 393              		.loc 1 904 7 is_stmt 0 view .LVU113
 394 000a DB68     		ldr	r3, [r3, #12]
 395              		.loc 1 904 6 view .LVU114
 396 000c 13F0010F 		tst	r3, #1
 397 0010 01D0     		beq	.L29
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Bank2 Control Register access */
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->CR2, FLASH_CR_LOCK);
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Verify Flash Bank2 is locked */
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (READ_BIT(FLASH->CR2, FLASH_CR_LOCK) == 0U)
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 398              		.loc 1 920 10 view .LVU115
 399 0012 0020     		movs	r0, #0
 400 0014 7047     		bx	lr
 401              	.L29:
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 402              		.loc 1 906 12 view .LVU116
 403 0016 0120     		movs	r0, #1
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 404              		.loc 1 921 1 view .LVU117
 405 0018 7047     		bx	lr
 406              	.L31:
 407 001a 00BF     		.align	2
 408              	.L30:
 409 001c 00200052 		.word	1375739904
 410              		.cfi_endproc
 411              	.LFE150:
 413              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 414              		.align	1
 415              		.global	HAL_FLASH_OB_Unlock
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 420              	HAL_FLASH_OB_Unlock:
 421              	.LFB151:
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 26


 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Unlock the FLASH Option Control Registers access.
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 422              		.loc 1 928 1 is_stmt 1 view -0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) != 0U)
 427              		.loc 1 929 3 view .LVU119
 428              		.loc 1 929 6 is_stmt 0 view .LVU120
 429 0000 0A4B     		ldr	r3, .L36
 430 0002 9B69     		ldr	r3, [r3, #24]
 431              		.loc 1 929 5 view .LVU121
 432 0004 13F0010F 		tst	r3, #1
 433 0008 0BD0     		beq	.L34
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorizes the Option Byte registers programming */
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPT_KEY1);
 434              		.loc 1 932 5 is_stmt 1 view .LVU122
 435 000a 084B     		ldr	r3, .L36
 436 000c 084A     		ldr	r2, .L36+4
 437 000e 9A60     		str	r2, [r3, #8]
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPT_KEY2);
 438              		.loc 1 933 5 view .LVU123
 439 0010 02F14432 		add	r2, r2, #1145324612
 440 0014 9A60     		str	r2, [r3, #8]
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Verify that the Option Bytes are unlocked */
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) != 0U)
 441              		.loc 1 936 5 view .LVU124
 442              		.loc 1 936 9 is_stmt 0 view .LVU125
 443 0016 9B69     		ldr	r3, [r3, #24]
 444              		.loc 1 936 8 view .LVU126
 445 0018 13F0010F 		tst	r3, #1
 446 001c 03D1     		bne	.L35
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 447              		.loc 1 942 10 view .LVU127
 448 001e 0020     		movs	r0, #0
 449 0020 7047     		bx	lr
 450              	.L34:
 451 0022 0020     		movs	r0, #0
 452 0024 7047     		bx	lr
 453              	.L35:
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 454              		.loc 1 938 14 view .LVU128
 455 0026 0120     		movs	r0, #1
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 27


 456              		.loc 1 943 1 view .LVU129
 457 0028 7047     		bx	lr
 458              	.L37:
 459 002a 00BF     		.align	2
 460              	.L36:
 461 002c 00200052 		.word	1375739904
 462 0030 3B2A1908 		.word	135866939
 463              		.cfi_endproc
 464              	.LFE151:
 466              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 467              		.align	1
 468              		.global	HAL_FLASH_OB_Lock
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 473              	HAL_FLASH_OB_Lock:
 474              	.LFB152:
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Lock the FLASH Option Control Registers access.
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 475              		.loc 1 950 1 is_stmt 1 view -0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK);
 480              		.loc 1 952 3 view .LVU131
 481 0000 064B     		ldr	r3, .L41
 482 0002 9A69     		ldr	r2, [r3, #24]
 483 0004 42F00102 		orr	r2, r2, #1
 484 0008 9A61     		str	r2, [r3, #24]
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Verify that the Option Bytes are locked */
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) == 0U)
 485              		.loc 1 955 3 view .LVU132
 486              		.loc 1 955 7 is_stmt 0 view .LVU133
 487 000a 9B69     		ldr	r3, [r3, #24]
 488              		.loc 1 955 6 view .LVU134
 489 000c 13F0010F 		tst	r3, #1
 490 0010 01D0     		beq	.L40
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 491              		.loc 1 960 10 view .LVU135
 492 0012 0020     		movs	r0, #0
 493 0014 7047     		bx	lr
 494              	.L40:
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 495              		.loc 1 957 12 view .LVU136
 496 0016 0120     		movs	r0, #1
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 28


 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 497              		.loc 1 961 1 view .LVU137
 498 0018 7047     		bx	lr
 499              	.L42:
 500 001a 00BF     		.align	2
 501              	.L41:
 502 001c 00200052 		.word	1375739904
 503              		.cfi_endproc
 504              	.LFE152:
 506              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 507              		.align	1
 508              		.global	HAL_FLASH_GetError
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 513              	HAL_FLASH_GetError:
 514              	.LFB154:
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Launch the option bytes loading.
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for CRC computation to be completed */
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (FLASH_CRC_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_1) != HAL_OK)
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = HAL_ERROR;
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else if (FLASH_CRC_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_2) != HAL_OK)
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = HAL_ERROR;
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = HAL_OK;
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (status == HAL_OK)
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Set OPTSTRT Bit */
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     SET_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTSTART);
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Wait for OB change operation to be completed */
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = FLASH_OB_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 29


1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *  @brief   Peripheral Errors functions
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 ##### Peripheral Errors functions #####
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_FLASH_ERRORCode The returned value can be:
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_NONE       : No error set
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP_BANK1  : Write Protection Error on Bank 1
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS_BANK1  : Program Sequence Error on Bank 1
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_STRB_BANK1 : Strobe Error on Bank 1
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_INC_BANK1  : Inconsistency Error on Bank 1
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPE_BANK1  : Operation Error on Bank 1
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDP_BANK1  : Read Protection Error on Bank 1
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDS_BANK1  : Read Secured Error on Bank 1
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SNECC_BANK1: ECC Single Correction Error on Bank 1
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_DBECC_BANK1: ECC Double Detection Error on Bank 1
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_CRCRD_BANK1: CRC Read Error on Bank 1
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP_BANK2  : Write Protection Error on Bank 2
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS_BANK2  : Program Sequence Error on Bank 2
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_STRB_BANK2 : Strobe Error on Bank 2
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_INC_BANK2  : Inconsistency Error on Bank 2
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPE_BANK2  : Operation Error on Bank 2
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDP_BANK2  : Read Protection Error on Bank 2
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDS_BANK2  : Read Secured Error on Bank 2
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SNECC_BANK2: SNECC Error on Bank 2
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_DBECC_BANK2: Double Detection ECC on Bank 2
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_CRCRD_BANK2: CRC Read Error on Bank 2
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 515              		.loc 1 1046 1 is_stmt 1 view -0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              		@ link register save eliminated.
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    return pFlash.ErrorCode;
 520              		.loc 1 1047 4 view .LVU139
 521              		.loc 1 1047 17 is_stmt 0 view .LVU140
 522 0000 014B     		ldr	r3, .L44
 523 0002 9869     		ldr	r0, [r3, #24]
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 524              		.loc 1 1048 1 view .LVU141
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 30


 525 0004 7047     		bx	lr
 526              	.L45:
 527 0006 00BF     		.align	2
 528              	.L44:
 529 0008 00000000 		.word	pFlash
 530              		.cfi_endproc
 531              	.LFE154:
 533              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 534              		.align	1
 535              		.global	FLASH_WaitForLastOperation
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 540              	FLASH_WaitForLastOperation:
 541              	.LVL27:
 542              	.LFB155:
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Bank flash FLASH_BANK_1 or FLASH_BANK_2
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout, uint32_t Bank)
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 543              		.loc 1 1071 1 is_stmt 1 view -0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		.loc 1 1071 1 is_stmt 0 view .LVU143
 548 0000 70B5     		push	{r4, r5, r6, lr}
 549              		.cfi_def_cfa_offset 16
 550              		.cfi_offset 4, -16
 551              		.cfi_offset 5, -12
 552              		.cfi_offset 6, -8
 553              		.cfi_offset 14, -4
 554 0002 0446     		mov	r4, r0
 555 0004 0D46     		mov	r5, r1
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on QW flag to be reset.
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      Even if the FLASH operation fails, the QW flag will be reset and an error
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      flag will be set */
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bsyflag = FLASH_FLAG_QW_BANK1;
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 31


 556              		.loc 1 1076 3 is_stmt 1 view .LVU144
 557              	.LVL28:
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t errorflag = 0;
 558              		.loc 1 1077 3 view .LVU145
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 559              		.loc 1 1078 3 view .LVU146
 560              		.loc 1 1078 24 is_stmt 0 view .LVU147
 561 0006 FFF7FEFF 		bl	HAL_GetTick
 562              	.LVL29:
 563              		.loc 1 1078 24 view .LVU148
 564 000a 0646     		mov	r6, r0
 565              	.LVL30:
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(Bank));
 566              		.loc 1 1080 3 is_stmt 1 view .LVU149
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (Bank == FLASH_BANK_2)
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Select bsyflag depending on Bank */
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_QW_BANK2;
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(bsyflag))
 567              		.loc 1 1091 3 view .LVU150
 568              	.L48:
 569              		.loc 1 1091 9 view .LVU151
 570 000c 194B     		ldr	r3, .L60
 571 000e 1B69     		ldr	r3, [r3, #16]
 572 0010 13F0040F 		tst	r3, #4
 573 0014 0BD0     		beq	.L57
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 574              		.loc 1 1093 5 view .LVU152
 575              		.loc 1 1093 7 is_stmt 0 view .LVU153
 576 0016 B4F1FF3F 		cmp	r4, #-1
 577 001a F7D0     		beq	.L48
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 578              		.loc 1 1095 7 is_stmt 1 view .LVU154
 579              		.loc 1 1095 12 is_stmt 0 view .LVU155
 580 001c FFF7FEFF 		bl	HAL_GetTick
 581              	.LVL31:
 582              		.loc 1 1095 26 discriminator 1 view .LVU156
 583 0020 801B     		subs	r0, r0, r6
 584              		.loc 1 1095 9 discriminator 1 view .LVU157
 585 0022 A042     		cmp	r0, r4
 586 0024 21D8     		bhi	.L52
 587              		.loc 1 1095 50 discriminator 1 view .LVU158
 588 0026 002C     		cmp	r4, #0
 589 0028 F0D1     		bne	.L48
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 590              		.loc 1 1097 16 view .LVU159
 591 002a 0320     		movs	r0, #3
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 32


 592 002c 04E0     		b	.L49
 593              	.L57:
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Get Error Flags */
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (Bank == FLASH_BANK_1)
 594              		.loc 1 1103 3 is_stmt 1 view .LVU160
 595              		.loc 1 1103 6 is_stmt 0 view .LVU161
 596 002e 012D     		cmp	r5, #1
 597 0030 03D0     		beq	.L58
 598              	.LVL32:
 599              	.L51:
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     errorflag = FLASH->SR1 & FLASH_FLAG_ALL_ERRORS_BANK1;
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     errorflag = (FLASH->SR2 & FLASH_FLAG_ALL_ERRORS_BANK2) | 0x80000000U;
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* In case of error reported in Flash SR1 or SR2 register */
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((errorflag & 0x7FFFFFFFU) != 0U)
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Save the error code*/
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= errorflag;
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(errorflag);
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 600              		.loc 1 1127 3 is_stmt 1 view .LVU162
 601              		.loc 1 1127 5 is_stmt 0 view .LVU163
 602 0032 012D     		cmp	r5, #1
 603 0034 0ED0     		beq	.L59
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_EOP_BANK1))
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH End of Operation pending bit */
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_EOP_BANK2))
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH End of Operation pending bit */
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 33


1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 604              		.loc 1 1146 10 view .LVU164
 605 0036 0020     		movs	r0, #0
 606              	.L49:
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 607              		.loc 1 1147 1 view .LVU165
 608 0038 70BD     		pop	{r4, r5, r6, pc}
 609              	.LVL33:
 610              	.L58:
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 611              		.loc 1 1105 5 is_stmt 1 view .LVU166
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 612              		.loc 1 1105 22 is_stmt 0 view .LVU167
 613 003a 0E4B     		ldr	r3, .L60
 614 003c 1B69     		ldr	r3, [r3, #16]
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 615              		.loc 1 1105 15 view .LVU168
 616 003e 0E4A     		ldr	r2, .L60+4
 617              	.LVL34:
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 618              		.loc 1 1115 3 is_stmt 1 view .LVU169
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 619              		.loc 1 1115 5 is_stmt 0 view .LVU170
 620 0040 1340     		ands	r3, r3, r2
 621              	.LVL35:
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 622              		.loc 1 1115 5 view .LVU171
 623 0042 F6D0     		beq	.L51
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 624              		.loc 1 1118 5 is_stmt 1 view .LVU172
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 625              		.loc 1 1118 11 is_stmt 0 view .LVU173
 626 0044 0D49     		ldr	r1, .L60+8
 627 0046 8A69     		ldr	r2, [r1, #24]
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 628              		.loc 1 1118 22 view .LVU174
 629 0048 1A43     		orrs	r2, r2, r3
 630 004a 8A61     		str	r2, [r1, #24]
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 631              		.loc 1 1121 5 is_stmt 1 view .LVU175
 632 004c 094A     		ldr	r2, .L60
 633 004e 5361     		str	r3, [r2, #20]
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 634              		.loc 1 1123 5 view .LVU176
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 635              		.loc 1 1123 12 is_stmt 0 view .LVU177
 636 0050 0120     		movs	r0, #1
 637 0052 F1E7     		b	.L49
 638              	.LVL36:
 639              	.L59:
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 640              		.loc 1 1129 5 is_stmt 1 view .LVU178
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 641              		.loc 1 1129 9 is_stmt 0 view .LVU179
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 34


 642 0054 074B     		ldr	r3, .L60
 643 0056 1B69     		ldr	r3, [r3, #16]
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 644              		.loc 1 1129 8 view .LVU180
 645 0058 13F4803F 		tst	r3, #65536
 646 005c 07D0     		beq	.L55
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 647              		.loc 1 1132 7 is_stmt 1 view .LVU181
 648 005e 054B     		ldr	r3, .L60
 649 0060 4FF48032 		mov	r2, #65536
 650 0064 5A61     		str	r2, [r3, #20]
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 651              		.loc 1 1146 10 is_stmt 0 view .LVU182
 652 0066 0020     		movs	r0, #0
 653 0068 E6E7     		b	.L49
 654              	.LVL37:
 655              	.L52:
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 656              		.loc 1 1097 16 view .LVU183
 657 006a 0320     		movs	r0, #3
 658 006c E4E7     		b	.L49
 659              	.LVL38:
 660              	.L55:
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 661              		.loc 1 1146 10 view .LVU184
 662 006e 0020     		movs	r0, #0
 663 0070 E2E7     		b	.L49
 664              	.L61:
 665 0072 00BF     		.align	2
 666              	.L60:
 667 0074 00200052 		.word	1375739904
 668 0078 0000AE17 		.word	397279232
 669 007c 00000000 		.word	pFlash
 670              		.cfi_endproc
 671              	.LFE155:
 673              		.section	.text.HAL_FLASH_Program,"ax",%progbits
 674              		.align	1
 675              		.global	HAL_FLASH_Program
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 680              	HAL_FLASH_Program:
 681              	.LVL39:
 682              	.LFB144:
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 683              		.loc 1 155 1 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t *)FlashAddress;
 687              		.loc 1 156 3 view .LVU186
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
 688              		.loc 1 157 3 view .LVU187
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 689              		.loc 1 158 3 view .LVU188
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 690              		.loc 1 159 3 view .LVU189
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 35


 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 691              		.loc 1 160 3 view .LVU190
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 692              		.loc 1 163 3 view .LVU191
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 693              		.loc 1 164 3 view .LVU192
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 694              		.loc 1 167 3 view .LVU193
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 695              		.loc 1 167 3 view .LVU194
 696 0000 2F4B     		ldr	r3, .L81
 697 0002 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 698 0004 012B     		cmp	r3, #1
 699 0006 59D0     		beq	.L70
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 700              		.loc 1 155 1 is_stmt 0 view .LVU195
 701 0008 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 702              		.cfi_def_cfa_offset 24
 703              		.cfi_offset 4, -24
 704              		.cfi_offset 5, -20
 705              		.cfi_offset 6, -16
 706              		.cfi_offset 7, -12
 707              		.cfi_offset 8, -8
 708              		.cfi_offset 14, -4
 709 000c 0646     		mov	r6, r0
 710 000e 0C46     		mov	r4, r1
 711 0010 1546     		mov	r5, r2
 712 0012 0F46     		mov	r7, r1
 713 0014 9046     		mov	r8, r2
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 714              		.loc 1 167 3 is_stmt 1 discriminator 2 view .LVU196
 715 0016 2A4B     		ldr	r3, .L81
 716 0018 0122     		movs	r2, #1
 717              	.LVL40:
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 718              		.loc 1 167 3 is_stmt 0 discriminator 2 view .LVU197
 719 001a 1A75     		strb	r2, [r3, #20]
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 720              		.loc 1 167 3 is_stmt 1 view .LVU198
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 721              		.loc 1 170 3 view .LVU199
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 722              		.loc 1 170 7 is_stmt 0 view .LVU200
 723 001c 01F17842 		add	r2, r1, #-134217728
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 724              		.loc 1 170 57 view .LVU201
 725 0020 284B     		ldr	r3, .L81+4
 726 0022 0B44     		add	r3, r3, r1
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 727              		.loc 1 170 5 view .LVU202
 728 0024 B3F5806F 		cmp	r3, #1024
 729 0028 28BF     		it	cs
 730 002a B2F5003F 		cmpcs	r2, #131072
 731 002e 02D3     		bcc	.L77
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 732              		.loc 1 187 12 view .LVU203
 733 0030 0120     		movs	r0, #1
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 36


 734              	.LVL41:
 735              	.L63:
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 736              		.loc 1 303 1 view .LVU204
 737 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 738              	.LVL42:
 739              	.L77:
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Prevent unused argument(s) compilation warning */
 740              		.loc 1 175 5 is_stmt 1 view .LVU205
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 741              		.loc 1 177 5 view .LVU206
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 742              		.loc 1 191 3 view .LVU207
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 743              		.loc 1 191 20 is_stmt 0 view .LVU208
 744 0036 224B     		ldr	r3, .L81
 745 0038 0022     		movs	r2, #0
 746 003a 9A61     		str	r2, [r3, #24]
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 747              		.loc 1 194 3 is_stmt 1 view .LVU209
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 748              		.loc 1 194 12 is_stmt 0 view .LVU210
 749 003c 0121     		movs	r1, #1
 750              	.LVL43:
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 751              		.loc 1 194 12 view .LVU211
 752 003e 4CF25030 		movw	r0, #50000
 753              	.LVL44:
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 754              		.loc 1 194 12 view .LVU212
 755 0042 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 756              	.LVL45:
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 757              		.loc 1 196 3 is_stmt 1 view .LVU213
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 758              		.loc 1 196 5 is_stmt 0 view .LVU214
 759 0046 28BB     		cbnz	r0, .L64
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 760              		.loc 1 221 7 is_stmt 1 view .LVU215
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 761              		.loc 1 221 10 is_stmt 0 view .LVU216
 762 0048 022E     		cmp	r6, #2
 763 004a 27D0     		beq	.L78
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 764              		.loc 1 230 9 is_stmt 1 view .LVU217
 765 004c 1E4A     		ldr	r2, .L81+8
 766 004e D368     		ldr	r3, [r2, #12]
 767 0050 43F00203 		orr	r3, r3, #2
 768 0054 D360     		str	r3, [r2, #12]
 769              	.L66:
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 770              		.loc 1 234 5 view .LVU218
 771              	.LBB18:
 772              	.LBI18:
 773              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 37


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 38


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 39


 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 40


 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 41


 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 42


 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 43


 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 44


 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 45


 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 46


 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 47


 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 48


 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 49


 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 50


 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 51


 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 52


 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 53


 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 774              		.loc 2 933 27 view .LVU219
 775              	.LBB19:
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 776              		.loc 2 935 3 view .LVU220
 777              		.syntax unified
 778              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 779 0056 BFF36F8F 		isb 0xF
 780              	@ 0 "" 2
 781              		.thumb
 782              		.syntax unified
 783              	.LBE19:
 784              	.LBE18:
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 785              		.loc 1 235 5 view .LVU221
 786              	.LBB20:
 787              	.LBI20:
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 788              		.loc 2 944 27 view .LVU222
 789              	.LBB21:
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 790              		.loc 2 946 3 view .LVU223
 791              		.syntax unified
 792              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 793 005a BFF34F8F 		dsb 0xF
 794              	@ 0 "" 2
 795              		.thumb
 796              		.syntax unified
 797              	.LBE21:
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 54


 798              	.LBE20:
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 799              		.loc 1 238 5 view .LVU224
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 800              		.loc 1 238 8 is_stmt 0 view .LVU225
 801 005e 022E     		cmp	r6, #2
 802 0060 22D0     		beq	.L79
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 803              		.loc 1 160 11 view .LVU226
 804 0062 0423     		movs	r3, #4
 805              	.LVL46:
 806              	.L67:
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 807              		.loc 1 247 7 is_stmt 1 view .LVU227
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 808              		.loc 1 249 9 view .LVU228
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 809              		.loc 1 249 22 is_stmt 0 view .LVU229
 810 0064 58F8042B 		ldr	r2, [r8], #4
 811              	.LVL47:
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 812              		.loc 1 249 20 view .LVU230
 813 0068 47F8042B 		str	r2, [r7], #4
 814              	.LVL48:
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         src_addr++;
 815              		.loc 1 250 9 is_stmt 1 view .LVU231
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         row_index--;
 816              		.loc 1 251 9 view .LVU232
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      } while (row_index != 0U);
 817              		.loc 1 252 9 view .LVU233
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      } while (row_index != 0U);
 818              		.loc 1 252 18 is_stmt 0 view .LVU234
 819 006c 013B     		subs	r3, r3, #1
 820              	.LVL49:
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 821              		.loc 1 253 25 is_stmt 1 discriminator 1 view .LVU235
 822 006e 13F0FF03 		ands	r3, r3, #255
 823              	.LVL50:
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 824              		.loc 1 253 25 is_stmt 0 discriminator 1 view .LVU236
 825 0072 F7D1     		bne	.L67
 826              	.LVL51:
 827              	.L68:
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 828              		.loc 1 256 5 is_stmt 1 view .LVU237
 829              	.LBB22:
 830              	.LBI22:
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 831              		.loc 2 933 27 view .LVU238
 832              	.LBB23:
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 833              		.loc 2 935 3 view .LVU239
 834              		.syntax unified
 835              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 836 0074 BFF36F8F 		isb 0xF
 837              	@ 0 "" 2
 838              		.thumb
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 55


 839              		.syntax unified
 840              	.LBE23:
 841              	.LBE22:
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 842              		.loc 1 257 5 view .LVU240
 843              	.LBB24:
 844              	.LBI24:
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845              		.loc 2 944 27 view .LVU241
 846              	.LBB25:
 847              		.loc 2 946 3 view .LVU242
 848              		.syntax unified
 849              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 850 0078 BFF34F8F 		dsb 0xF
 851              	@ 0 "" 2
 852              		.thumb
 853              		.syntax unified
 854              	.LBE25:
 855              	.LBE24:
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 856              		.loc 1 260 5 view .LVU243
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 857              		.loc 1 260 14 is_stmt 0 view .LVU244
 858 007c 0121     		movs	r1, #1
 859 007e 4CF25030 		movw	r0, #50000
 860              	.LVL52:
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 861              		.loc 1 260 14 view .LVU245
 862 0082 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 863              	.LVL53:
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 864              		.loc 1 285 5 is_stmt 1 view .LVU246
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 865              		.loc 1 285 8 is_stmt 0 view .LVU247
 866 0086 022E     		cmp	r6, #2
 867 0088 12D0     		beq	.L80
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 868              		.loc 1 294 7 is_stmt 1 view .LVU248
 869 008a 0F4A     		ldr	r2, .L81+8
 870 008c D368     		ldr	r3, [r2, #12]
 871 008e 23F00203 		bic	r3, r3, #2
 872 0092 D360     		str	r3, [r2, #12]
 873              	.L64:
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 874              		.loc 1 300 3 view .LVU249
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 875              		.loc 1 300 3 view .LVU250
 876 0094 0A4B     		ldr	r3, .L81
 877 0096 0022     		movs	r2, #0
 878 0098 1A75     		strb	r2, [r3, #20]
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 879              		.loc 1 300 3 view .LVU251
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 880              		.loc 1 302 3 view .LVU252
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 881              		.loc 1 302 10 is_stmt 0 view .LVU253
 882 009a CAE7     		b	.L63
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 56


 883              	.LVL54:
 884              	.L78:
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 885              		.loc 1 224 9 is_stmt 1 view .LVU254
 886 009c 0A4A     		ldr	r2, .L81+8
 887 009e 9369     		ldr	r3, [r2, #24]
 888 00a0 43F02003 		orr	r3, r3, #32
 889 00a4 9361     		str	r3, [r2, #24]
 890 00a6 D6E7     		b	.L66
 891              	.L79:
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 892              		.loc 1 241 7 view .LVU255
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 893              		.loc 1 241 40 is_stmt 0 view .LVU256
 894 00a8 2B88     		ldrh	r3, [r5]
 895 00aa 9BB2     		uxth	r3, r3
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 896              		.loc 1 241 38 view .LVU257
 897 00ac 2380     		strh	r3, [r4]	@ movhi
 898 00ae E1E7     		b	.L68
 899              	.LVL55:
 900              	.L80:
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 901              		.loc 1 288 7 is_stmt 1 view .LVU258
 902 00b0 054A     		ldr	r2, .L81+8
 903 00b2 9369     		ldr	r3, [r2, #24]
 904 00b4 23F02003 		bic	r3, r3, #32
 905 00b8 9361     		str	r3, [r2, #24]
 906 00ba EBE7     		b	.L64
 907              	.LVL56:
 908              	.L70:
 909              		.cfi_def_cfa_offset 0
 910              		.cfi_restore 4
 911              		.cfi_restore 5
 912              		.cfi_restore 6
 913              		.cfi_restore 7
 914              		.cfi_restore 8
 915              		.cfi_restore 14
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 916              		.loc 1 167 3 is_stmt 0 discriminator 1 view .LVU259
 917 00bc 0220     		movs	r0, #2
 918              	.LVL57:
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 919              		.loc 1 303 1 view .LVU260
 920 00be 7047     		bx	lr
 921              	.L82:
 922              		.align	2
 923              	.L81:
 924 00c0 00000000 		.word	pFlash
 925 00c4 001000F7 		.word	-150990848
 926 00c8 00200052 		.word	1375739904
 927              		.cfi_endproc
 928              	.LFE144:
 930              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 931              		.align	1
 932              		.global	HAL_FLASH_Program_IT
 933              		.syntax unified
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 57


 934              		.thumb
 935              		.thumb_func
 937              	HAL_FLASH_Program_IT:
 938              	.LVL58:
 939              	.LFB145:
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 940              		.loc 1 320 1 is_stmt 1 view -0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t*)FlashAddress;
 944              		.loc 1 321 3 view .LVU262
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
 945              		.loc 1 322 3 view .LVU263
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 946              		.loc 1 323 3 view .LVU264
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 947              		.loc 1 324 3 view .LVU265
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 948              		.loc 1 325 3 view .LVU266
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 949              		.loc 1 328 3 view .LVU267
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 950              		.loc 1 329 3 view .LVU268
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 951              		.loc 1 332 3 view .LVU269
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 952              		.loc 1 332 3 view .LVU270
 953 0000 2B4B     		ldr	r3, .L100
 954 0002 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 955 0004 012B     		cmp	r3, #1
 956 0006 50D0     		beq	.L90
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 957              		.loc 1 320 1 is_stmt 0 view .LVU271
 958 0008 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 959              		.cfi_def_cfa_offset 24
 960              		.cfi_offset 4, -24
 961              		.cfi_offset 5, -20
 962              		.cfi_offset 6, -16
 963              		.cfi_offset 7, -12
 964              		.cfi_offset 8, -8
 965              		.cfi_offset 14, -4
 966 000c 0646     		mov	r6, r0
 967 000e 0C46     		mov	r4, r1
 968 0010 1546     		mov	r5, r2
 969 0012 0F46     		mov	r7, r1
 970 0014 9046     		mov	r8, r2
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 971              		.loc 1 332 3 is_stmt 1 discriminator 2 view .LVU272
 972 0016 264B     		ldr	r3, .L100
 973 0018 0122     		movs	r2, #1
 974              	.LVL59:
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 975              		.loc 1 332 3 is_stmt 0 discriminator 2 view .LVU273
 976 001a 1A75     		strb	r2, [r3, #20]
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 977              		.loc 1 332 3 is_stmt 1 view .LVU274
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 58


 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 978              		.loc 1 335 3 view .LVU275
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 979              		.loc 1 335 20 is_stmt 0 view .LVU276
 980 001c 0022     		movs	r2, #0
 981 001e 9A61     		str	r2, [r3, #24]
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 982              		.loc 1 338 3 is_stmt 1 view .LVU277
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 983              		.loc 1 338 7 is_stmt 0 view .LVU278
 984 0020 01F17842 		add	r2, r1, #-134217728
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 985              		.loc 1 338 57 view .LVU279
 986 0024 234B     		ldr	r3, .L100+4
 987 0026 0B44     		add	r3, r3, r1
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 988              		.loc 1 338 5 view .LVU280
 989 0028 B3F5806F 		cmp	r3, #1024
 990 002c 28BF     		it	cs
 991 002e B2F5003F 		cmpcs	r2, #131072
 992 0032 02D3     		bcc	.L97
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 993              		.loc 1 355 12 view .LVU281
 994 0034 0120     		movs	r0, #1
 995              	.LVL60:
 996              	.L84:
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 997              		.loc 1 469 1 view .LVU282
 998 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 999              	.LVL61:
 1000              	.L97:
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Prevent unused argument(s) compilation warning */
 1001              		.loc 1 343 5 is_stmt 1 view .LVU283
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1002              		.loc 1 345 5 view .LVU284
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1003              		.loc 1 359 3 view .LVU285
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1004              		.loc 1 359 12 is_stmt 0 view .LVU286
 1005 003a 0121     		movs	r1, #1
 1006              	.LVL62:
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1007              		.loc 1 359 12 view .LVU287
 1008 003c 4CF25030 		movw	r0, #50000
 1009              	.LVL63:
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1010              		.loc 1 359 12 view .LVU288
 1011 0040 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1012              	.LVL64:
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1013              		.loc 1 361 3 is_stmt 1 view .LVU289
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1014              		.loc 1 361 6 is_stmt 0 view .LVU290
 1015 0044 18B1     		cbz	r0, .L85
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1016              		.loc 1 364 5 is_stmt 1 view .LVU291
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 59


 1017              		.loc 1 364 5 view .LVU292
 1018 0046 1A4B     		ldr	r3, .L100
 1019 0048 0022     		movs	r2, #0
 1020 004a 1A75     		strb	r2, [r3, #20]
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1021              		.loc 1 364 5 view .LVU293
 1022 004c F3E7     		b	.L84
 1023              	.L85:
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1024              		.loc 1 368 5 view .LVU294
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1025              		.loc 1 368 20 is_stmt 0 view .LVU295
 1026 004e 184B     		ldr	r3, .L100
 1027 0050 1C61     		str	r4, [r3, #16]
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1028              		.loc 1 417 5 is_stmt 1 view .LVU296
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1029              		.loc 1 417 29 is_stmt 0 view .LVU297
 1030 0052 0322     		movs	r2, #3
 1031 0054 1A70     		strb	r2, [r3]
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1032              		.loc 1 420 5 is_stmt 1 view .LVU298
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1033              		.loc 1 420 8 is_stmt 0 view .LVU299
 1034 0056 022E     		cmp	r6, #2
 1035 0058 1DD0     		beq	.L98
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1036              		.loc 1 429 7 is_stmt 1 view .LVU300
 1037 005a 174A     		ldr	r2, .L100+8
 1038 005c D368     		ldr	r3, [r2, #12]
 1039 005e 43F00203 		orr	r3, r3, #2
 1040 0062 D360     		str	r3, [r2, #12]
 1041              	.L87:
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1);
 1042              		.loc 1 437 7 view .LVU301
 1043 0064 144A     		ldr	r2, .L100+8
 1044 0066 D368     		ldr	r3, [r2, #12]
 1045 0068 43F43C13 		orr	r3, r3, #3080192
 1046 006c D360     		str	r3, [r2, #12]
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 1047              		.loc 1 442 5 view .LVU302
 1048              	.LBB26:
 1049              	.LBI26:
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1050              		.loc 2 933 27 view .LVU303
 1051              	.LBB27:
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1052              		.loc 2 935 3 view .LVU304
 1053              		.syntax unified
 1054              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1055 006e BFF36F8F 		isb 0xF
 1056              	@ 0 "" 2
 1057              		.thumb
 1058              		.syntax unified
 1059              	.LBE27:
 1060              	.LBE26:
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 60


 1061              		.loc 1 443 5 view .LVU305
 1062              	.LBB28:
 1063              	.LBI28:
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1064              		.loc 2 944 27 view .LVU306
 1065              	.LBB29:
 1066              		.loc 2 946 3 view .LVU307
 1067              		.syntax unified
 1068              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1069 0072 BFF34F8F 		dsb 0xF
 1070              	@ 0 "" 2
 1071              		.thumb
 1072              		.syntax unified
 1073              	.LBE29:
 1074              	.LBE28:
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1075              		.loc 1 446 5 view .LVU308
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1076              		.loc 1 446 8 is_stmt 0 view .LVU309
 1077 0076 022E     		cmp	r6, #2
 1078 0078 13D0     		beq	.L99
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1079              		.loc 1 325 11 view .LVU310
 1080 007a 0423     		movs	r3, #4
 1081              	.LVL65:
 1082              	.L88:
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 1083              		.loc 1 455 7 is_stmt 1 view .LVU311
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 1084              		.loc 1 457 9 view .LVU312
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 1085              		.loc 1 457 22 is_stmt 0 view .LVU313
 1086 007c 58F8042B 		ldr	r2, [r8], #4
 1087              	.LVL66:
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 1088              		.loc 1 457 20 view .LVU314
 1089 0080 47F8042B 		str	r2, [r7], #4
 1090              	.LVL67:
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         src_addr++;
 1091              		.loc 1 458 9 is_stmt 1 view .LVU315
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         row_index--;
 1092              		.loc 1 459 9 view .LVU316
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       } while (row_index != 0U);
 1093              		.loc 1 460 9 view .LVU317
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       } while (row_index != 0U);
 1094              		.loc 1 460 18 is_stmt 0 view .LVU318
 1095 0084 013B     		subs	r3, r3, #1
 1096              	.LVL68:
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1097              		.loc 1 461 26 is_stmt 1 discriminator 1 view .LVU319
 1098 0086 13F0FF03 		ands	r3, r3, #255
 1099              	.LVL69:
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1100              		.loc 1 461 26 is_stmt 0 discriminator 1 view .LVU320
 1101 008a F7D1     		bne	.L88
 1102              	.LVL70:
 1103              	.L89:
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 61


 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 1104              		.loc 1 464 5 is_stmt 1 view .LVU321
 1105              	.LBB30:
 1106              	.LBI30:
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1107              		.loc 2 933 27 view .LVU322
 1108              	.LBB31:
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1109              		.loc 2 935 3 view .LVU323
 1110              		.syntax unified
 1111              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1112 008c BFF36F8F 		isb 0xF
 1113              	@ 0 "" 2
 1114              		.thumb
 1115              		.syntax unified
 1116              	.LBE31:
 1117              	.LBE30:
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1118              		.loc 1 465 5 view .LVU324
 1119              	.LBB32:
 1120              	.LBI32:
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1121              		.loc 2 944 27 view .LVU325
 1122              	.LBB33:
 1123              		.loc 2 946 3 view .LVU326
 1124              		.syntax unified
 1125              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1126 0090 BFF34F8F 		dsb 0xF
 1127              	@ 0 "" 2
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1128              		.loc 2 947 1 is_stmt 0 view .LVU327
 1129              		.thumb
 1130              		.syntax unified
 1131 0094 CFE7     		b	.L84
 1132              	.LVL71:
 1133              	.L98:
 1134              		.loc 2 947 1 view .LVU328
 1135              	.LBE33:
 1136              	.LBE32:
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1137              		.loc 1 423 7 is_stmt 1 view .LVU329
 1138 0096 084A     		ldr	r2, .L100+8
 1139 0098 9369     		ldr	r3, [r2, #24]
 1140 009a 43F02003 		orr	r3, r3, #32
 1141 009e 9361     		str	r3, [r2, #24]
 1142 00a0 E0E7     		b	.L87
 1143              	.L99:
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1144              		.loc 1 449 7 view .LVU330
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1145              		.loc 1 449 40 is_stmt 0 view .LVU331
 1146 00a2 2B88     		ldrh	r3, [r5]
 1147 00a4 9BB2     		uxth	r3, r3
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1148              		.loc 1 449 38 view .LVU332
 1149 00a6 2380     		strh	r3, [r4]	@ movhi
 1150 00a8 F0E7     		b	.L89
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 62


 1151              	.LVL72:
 1152              	.L90:
 1153              		.cfi_def_cfa_offset 0
 1154              		.cfi_restore 4
 1155              		.cfi_restore 5
 1156              		.cfi_restore 6
 1157              		.cfi_restore 7
 1158              		.cfi_restore 8
 1159              		.cfi_restore 14
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1160              		.loc 1 332 3 discriminator 1 view .LVU333
 1161 00aa 0220     		movs	r0, #2
 1162              	.LVL73:
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1163              		.loc 1 469 1 view .LVU334
 1164 00ac 7047     		bx	lr
 1165              	.L101:
 1166 00ae 00BF     		.align	2
 1167              	.L100:
 1168 00b0 00000000 		.word	pFlash
 1169 00b4 001000F7 		.word	-150990848
 1170 00b8 00200052 		.word	1375739904
 1171              		.cfi_endproc
 1172              	.LFE145:
 1174              		.section	.text.FLASH_OB_WaitForLastOperation,"ax",%progbits
 1175              		.align	1
 1176              		.global	FLASH_OB_WaitForLastOperation
 1177              		.syntax unified
 1178              		.thumb
 1179              		.thumb_func
 1181              	FLASH_OB_WaitForLastOperation:
 1182              	.LVL74:
 1183              	.LFB156:
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH Option Bytes change operation to complete.
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_OB_WaitForLastOperation(uint32_t Timeout)
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1184              		.loc 1 1155 1 is_stmt 1 view -0
 1185              		.cfi_startproc
 1186              		@ args = 0, pretend = 0, frame = 0
 1187              		@ frame_needed = 0, uses_anonymous_args = 0
 1188              		.loc 1 1155 1 is_stmt 0 view .LVU336
 1189 0000 38B5     		push	{r3, r4, r5, lr}
 1190              		.cfi_def_cfa_offset 16
 1191              		.cfi_offset 3, -16
 1192              		.cfi_offset 4, -12
 1193              		.cfi_offset 5, -8
 1194              		.cfi_offset 14, -4
 1195 0002 0446     		mov	r4, r0
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Get timeout */
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 1196              		.loc 1 1157 3 is_stmt 1 view .LVU337
 1197              		.loc 1 1157 24 is_stmt 0 view .LVU338
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 63


 1198 0004 FFF7FEFF 		bl	HAL_GetTick
 1199              	.LVL75:
 1200              		.loc 1 1157 24 view .LVU339
 1201 0008 0546     		mov	r5, r0
 1202              	.LVL76:
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH Option Bytes change operation to complete by polling on OPT_BUSY flag to be
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(READ_BIT(FLASH->OPTSR_CUR, FLASH_OPTSR_OPT_BUSY) != 0U)
 1203              		.loc 1 1160 3 is_stmt 1 view .LVU340
 1204              	.L104:
 1205              		.loc 1 1160 58 view .LVU341
 1206              		.loc 1 1160 9 is_stmt 0 view .LVU342
 1207 000a 134B     		ldr	r3, .L113
 1208 000c DB69     		ldr	r3, [r3, #28]
 1209              		.loc 1 1160 58 view .LVU343
 1210 000e 13F0010F 		tst	r3, #1
 1211 0012 0BD0     		beq	.L111
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 1212              		.loc 1 1162 5 is_stmt 1 view .LVU344
 1213              		.loc 1 1162 7 is_stmt 0 view .LVU345
 1214 0014 B4F1FF3F 		cmp	r4, #-1
 1215 0018 F7D0     		beq	.L104
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1216              		.loc 1 1164 7 is_stmt 1 view .LVU346
 1217              		.loc 1 1164 12 is_stmt 0 view .LVU347
 1218 001a FFF7FEFF 		bl	HAL_GetTick
 1219              	.LVL77:
 1220              		.loc 1 1164 26 discriminator 1 view .LVU348
 1221 001e 401B     		subs	r0, r0, r5
 1222              		.loc 1 1164 9 discriminator 1 view .LVU349
 1223 0020 A042     		cmp	r0, r4
 1224 0022 16D8     		bhi	.L107
 1225              		.loc 1 1164 50 discriminator 1 view .LVU350
 1226 0024 002C     		cmp	r4, #0
 1227 0026 F0D1     		bne	.L104
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 1228              		.loc 1 1166 16 view .LVU351
 1229 0028 0320     		movs	r0, #3
 1230 002a 05E0     		b	.L105
 1231              	.L111:
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check option byte change error */
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->OPTSR_CUR, FLASH_OPTSR_OPTCHANGEERR) != 0U)
 1232              		.loc 1 1172 3 is_stmt 1 view .LVU352
 1233              		.loc 1 1172 6 is_stmt 0 view .LVU353
 1234 002c 0A4B     		ldr	r3, .L113
 1235 002e DB69     		ldr	r3, [r3, #28]
 1236              		.loc 1 1172 5 view .LVU354
 1237 0030 13F0804F 		tst	r3, #1073741824
 1238 0034 01D1     		bne	.L112
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 64


1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_OB_CHANGE;
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear the OB error flag */
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     FLASH->OPTCCR |= FLASH_OPTCCR_CLR_OPTCHANGEERR;
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* If there is no error flag set */
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1239              		.loc 1 1184 10 view .LVU355
 1240 0036 0020     		movs	r0, #0
 1241              	.L105:
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1242              		.loc 1 1185 1 view .LVU356
 1243 0038 38BD     		pop	{r3, r4, r5, pc}
 1244              	.LVL78:
 1245              	.L112:
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1246              		.loc 1 1175 5 is_stmt 1 view .LVU357
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1247              		.loc 1 1175 11 is_stmt 0 view .LVU358
 1248 003a 084A     		ldr	r2, .L113+4
 1249 003c 9369     		ldr	r3, [r2, #24]
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1250              		.loc 1 1175 22 view .LVU359
 1251 003e 43F08043 		orr	r3, r3, #1073741824
 1252 0042 9361     		str	r3, [r2, #24]
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1253              		.loc 1 1178 5 is_stmt 1 view .LVU360
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1254              		.loc 1 1178 10 is_stmt 0 view .LVU361
 1255 0044 044A     		ldr	r2, .L113
 1256 0046 536A     		ldr	r3, [r2, #36]
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1257              		.loc 1 1178 19 view .LVU362
 1258 0048 43F08043 		orr	r3, r3, #1073741824
 1259 004c 5362     		str	r3, [r2, #36]
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1260              		.loc 1 1180 5 is_stmt 1 view .LVU363
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1261              		.loc 1 1180 12 is_stmt 0 view .LVU364
 1262 004e 0120     		movs	r0, #1
 1263 0050 F2E7     		b	.L105
 1264              	.L107:
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1265              		.loc 1 1166 16 view .LVU365
 1266 0052 0320     		movs	r0, #3
 1267 0054 F0E7     		b	.L105
 1268              	.L114:
 1269 0056 00BF     		.align	2
 1270              	.L113:
 1271 0058 00200052 		.word	1375739904
 1272 005c 00000000 		.word	pFlash
 1273              		.cfi_endproc
 1274              	.LFE156:
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 65


 1276              		.section	.text.FLASH_CRC_WaitForLastOperation,"ax",%progbits
 1277              		.align	1
 1278              		.global	FLASH_CRC_WaitForLastOperation
 1279              		.syntax unified
 1280              		.thumb
 1281              		.thumb_func
 1283              	FLASH_CRC_WaitForLastOperation:
 1284              	.LVL79:
 1285              	.LFB157:
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH CRC computation to complete.
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Bank flash FLASH_BANK_1 or FLASH_BANK_2
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_CRC_WaitForLastOperation(uint32_t Timeout, uint32_t Bank)
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1286              		.loc 1 1194 1 is_stmt 1 view -0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 0
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290              		.loc 1 1194 1 is_stmt 0 view .LVU367
 1291 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1292              		.cfi_def_cfa_offset 24
 1293              		.cfi_offset 3, -24
 1294              		.cfi_offset 4, -20
 1295              		.cfi_offset 5, -16
 1296              		.cfi_offset 6, -12
 1297              		.cfi_offset 7, -8
 1298              		.cfi_offset 14, -4
 1299 0002 0446     		mov	r4, r0
 1300 0004 0E46     		mov	r6, r1
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bsyflag;
 1301              		.loc 1 1195 3 is_stmt 1 view .LVU368
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 1302              		.loc 1 1196 3 view .LVU369
 1303              		.loc 1 1196 24 is_stmt 0 view .LVU370
 1304 0006 FFF7FEFF 		bl	HAL_GetTick
 1305              	.LVL80:
 1306              		.loc 1 1196 24 view .LVU371
 1307 000a 0746     		mov	r7, r0
 1308              	.LVL81:
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(Bank));
 1309              		.loc 1 1198 3 is_stmt 1 view .LVU372
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Select bsyflag depending on Bank */
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 1310              		.loc 1 1201 3 view .LVU373
 1311              		.loc 1 1201 5 is_stmt 0 view .LVU374
 1312 000c 012E     		cmp	r6, #1
 1313 000e 11D0     		beq	.L116
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_CRC_BUSY_BANK1;
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 66


1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_CRC_BUSY_BANK2;
 1314              		.loc 1 1207 13 view .LVU375
 1315 0010 154D     		ldr	r5, .L130
 1316              	.LVL82:
 1317              	.L118:
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH CRC computation to complete by polling on CRC_BUSY flag to be reset */
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(bsyflag))
 1318              		.loc 1 1211 9 is_stmt 1 view .LVU376
 1319 0012 164B     		ldr	r3, .L130+4
 1320 0014 1B69     		ldr	r3, [r3, #16]
 1321 0016 35EA0303 		bics	r3, r5, r3
 1322 001a 0DD1     		bne	.L127
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 1323              		.loc 1 1213 5 view .LVU377
 1324              		.loc 1 1213 7 is_stmt 0 view .LVU378
 1325 001c B4F1FF3F 		cmp	r4, #-1
 1326 0020 F7D0     		beq	.L118
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1327              		.loc 1 1215 7 is_stmt 1 view .LVU379
 1328              		.loc 1 1215 12 is_stmt 0 view .LVU380
 1329 0022 FFF7FEFF 		bl	HAL_GetTick
 1330              	.LVL83:
 1331              		.loc 1 1215 26 discriminator 1 view .LVU381
 1332 0026 C01B     		subs	r0, r0, r7
 1333              		.loc 1 1215 9 discriminator 1 view .LVU382
 1334 0028 A042     		cmp	r0, r4
 1335 002a 1BD8     		bhi	.L122
 1336              		.loc 1 1215 50 discriminator 1 view .LVU383
 1337 002c 002C     		cmp	r4, #0
 1338 002e F0D1     		bne	.L118
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 1339              		.loc 1 1217 16 view .LVU384
 1340 0030 0320     		movs	r0, #3
 1341 0032 04E0     		b	.L119
 1342              	.LVL84:
 1343              	.L116:
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1344              		.loc 1 1203 13 view .LVU385
 1345 0034 0825     		movs	r5, #8
 1346 0036 ECE7     		b	.L118
 1347              	.LVL85:
 1348              	.L127:
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH CRC read error flag  */
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 1349              		.loc 1 1223 3 is_stmt 1 view .LVU386
 1350              		.loc 1 1223 5 is_stmt 0 view .LVU387
 1351 0038 012E     		cmp	r6, #1
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 67


 1352 003a 01D0     		beq	.L128
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_CRCRDERR_BANK1))
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Save the error code */
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_CRCRD_BANK1;
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH CRC read error pending bit */
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_CRCRDERR_BANK1);
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_CRCRDERR_BANK2))
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Save the error code */
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_CRCRD_BANK2;
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH CRC read error pending bit */
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_CRCRDERR_BANK2);
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* If there is no error flag set */
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1353              		.loc 1 1253 10 view .LVU388
 1354 003c 0020     		movs	r0, #0
 1355              	.L119:
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1356              		.loc 1 1254 1 view .LVU389
 1357 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1358              	.LVL86:
 1359              	.L128:
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1360              		.loc 1 1225 5 is_stmt 1 view .LVU390
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1361              		.loc 1 1225 9 is_stmt 0 view .LVU391
 1362 0040 0A4B     		ldr	r3, .L130+4
 1363 0042 1B69     		ldr	r3, [r3, #16]
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1364              		.loc 1 1225 8 view .LVU392
 1365 0044 13F0805F 		tst	r3, #268435456
 1366 0048 01D1     		bne	.L129
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1367              		.loc 1 1253 10 view .LVU393
 1368 004a 0020     		movs	r0, #0
 1369 004c F7E7     		b	.L119
 1370              	.L129:
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1371              		.loc 1 1228 7 is_stmt 1 view .LVU394
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 68


 1372              		.loc 1 1228 13 is_stmt 0 view .LVU395
 1373 004e 084A     		ldr	r2, .L130+8
 1374 0050 9369     		ldr	r3, [r2, #24]
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1375              		.loc 1 1228 24 view .LVU396
 1376 0052 43F08053 		orr	r3, r3, #268435456
 1377 0056 9361     		str	r3, [r2, #24]
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1378              		.loc 1 1231 7 is_stmt 1 view .LVU397
 1379 0058 044B     		ldr	r3, .L130+4
 1380 005a 4FF08052 		mov	r2, #268435456
 1381 005e 5A61     		str	r2, [r3, #20]
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1382              		.loc 1 1233 7 view .LVU398
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1383              		.loc 1 1233 14 is_stmt 0 view .LVU399
 1384 0060 0120     		movs	r0, #1
 1385 0062 ECE7     		b	.L119
 1386              	.L122:
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1387              		.loc 1 1217 16 view .LVU400
 1388 0064 0320     		movs	r0, #3
 1389 0066 EAE7     		b	.L119
 1390              	.L131:
 1391              		.align	2
 1392              	.L130:
 1393 0068 08000080 		.word	-2147483640
 1394 006c 00200052 		.word	1375739904
 1395 0070 00000000 		.word	pFlash
 1396              		.cfi_endproc
 1397              	.LFE157:
 1399              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 1400              		.align	1
 1401              		.global	HAL_FLASH_OB_Launch
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1406              	HAL_FLASH_OB_Launch:
 1407              	.LFB153:
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 1408              		.loc 1 968 1 is_stmt 1 view -0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412 0000 08B5     		push	{r3, lr}
 1413              		.cfi_def_cfa_offset 8
 1414              		.cfi_offset 3, -8
 1415              		.cfi_offset 14, -4
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1416              		.loc 1 969 3 view .LVU402
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1417              		.loc 1 972 3 view .LVU403
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1418              		.loc 1 972 7 is_stmt 0 view .LVU404
 1419 0002 0121     		movs	r1, #1
 1420 0004 4CF25030 		movw	r0, #50000
 1421 0008 FFF7FEFF 		bl	FLASH_CRC_WaitForLastOperation
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 69


 1422              	.LVL87:
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1423              		.loc 1 972 6 discriminator 1 view .LVU405
 1424 000c 08B1     		cbz	r0, .L136
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1425              		.loc 1 974 12 view .LVU406
 1426 000e 0120     		movs	r0, #1
 1427              	.L133:
 1428              	.LVL88:
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1429              		.loc 1 996 3 is_stmt 1 view .LVU407
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1430              		.loc 1 997 1 is_stmt 0 view .LVU408
 1431 0010 08BD     		pop	{r3, pc}
 1432              	.LVL89:
 1433              	.L136:
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1434              		.loc 1 984 5 is_stmt 1 view .LVU409
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1435              		.loc 1 987 3 view .LVU410
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1436              		.loc 1 990 5 view .LVU411
 1437 0012 054A     		ldr	r2, .L137
 1438 0014 9369     		ldr	r3, [r2, #24]
 1439 0016 43F00203 		orr	r3, r3, #2
 1440 001a 9361     		str	r3, [r2, #24]
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1441              		.loc 1 993 5 view .LVU412
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1442              		.loc 1 993 14 is_stmt 0 view .LVU413
 1443 001c 4CF25030 		movw	r0, #50000
 1444 0020 FFF7FEFF 		bl	FLASH_OB_WaitForLastOperation
 1445              	.LVL90:
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1446              		.loc 1 993 14 view .LVU414
 1447 0024 F4E7     		b	.L133
 1448              	.L138:
 1449 0026 00BF     		.align	2
 1450              	.L137:
 1451 0028 00200052 		.word	1375739904
 1452              		.cfi_endproc
 1453              	.LFE153:
 1455              		.global	pFlash
 1456              		.section	.bss.pFlash,"aw",%nobits
 1457              		.align	2
 1460              	pFlash:
 1461 0000 00000000 		.space	28
 1461      00000000 
 1461      00000000 
 1461      00000000 
 1461      00000000 
 1462              		.text
 1463              	.Letext0:
 1464              		.file 3 "C:/Users/Timika/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 1465              		.file 4 "C:/Users/Timika/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 1466              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7b0xx.h"
 1467              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 70


 1468              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1469              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1470              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1471              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash_ex.h"
ARM GAS  C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s 			page 71


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_flash.c
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:20     .text.HAL_FLASH_EndOfOperationCallback:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:26     .text.HAL_FLASH_EndOfOperationCallback:00000000 HAL_FLASH_EndOfOperationCallback
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:41     .text.HAL_FLASH_OperationErrorCallback:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:47     .text.HAL_FLASH_OperationErrorCallback:00000000 HAL_FLASH_OperationErrorCallback
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:62     .text.HAL_FLASH_IRQHandler:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:68     .text.HAL_FLASH_IRQHandler:00000000 HAL_FLASH_IRQHandler
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:315    .text.HAL_FLASH_IRQHandler:000000f4 $d
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:1460   .bss.pFlash:00000000 pFlash
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:321    .text.HAL_FLASH_Unlock:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:327    .text.HAL_FLASH_Unlock:00000000 HAL_FLASH_Unlock
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:368    .text.HAL_FLASH_Unlock:0000002c $d
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:374    .text.HAL_FLASH_Lock:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:380    .text.HAL_FLASH_Lock:00000000 HAL_FLASH_Lock
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:409    .text.HAL_FLASH_Lock:0000001c $d
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:414    .text.HAL_FLASH_OB_Unlock:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:420    .text.HAL_FLASH_OB_Unlock:00000000 HAL_FLASH_OB_Unlock
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:461    .text.HAL_FLASH_OB_Unlock:0000002c $d
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:467    .text.HAL_FLASH_OB_Lock:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:473    .text.HAL_FLASH_OB_Lock:00000000 HAL_FLASH_OB_Lock
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:502    .text.HAL_FLASH_OB_Lock:0000001c $d
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:507    .text.HAL_FLASH_GetError:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:513    .text.HAL_FLASH_GetError:00000000 HAL_FLASH_GetError
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:529    .text.HAL_FLASH_GetError:00000008 $d
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:534    .text.FLASH_WaitForLastOperation:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:540    .text.FLASH_WaitForLastOperation:00000000 FLASH_WaitForLastOperation
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:667    .text.FLASH_WaitForLastOperation:00000074 $d
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:674    .text.HAL_FLASH_Program:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:680    .text.HAL_FLASH_Program:00000000 HAL_FLASH_Program
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:924    .text.HAL_FLASH_Program:000000c0 $d
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:931    .text.HAL_FLASH_Program_IT:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:937    .text.HAL_FLASH_Program_IT:00000000 HAL_FLASH_Program_IT
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:1168   .text.HAL_FLASH_Program_IT:000000b0 $d
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:1175   .text.FLASH_OB_WaitForLastOperation:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:1181   .text.FLASH_OB_WaitForLastOperation:00000000 FLASH_OB_WaitForLastOperation
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:1271   .text.FLASH_OB_WaitForLastOperation:00000058 $d
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:1277   .text.FLASH_CRC_WaitForLastOperation:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:1283   .text.FLASH_CRC_WaitForLastOperation:00000000 FLASH_CRC_WaitForLastOperation
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:1393   .text.FLASH_CRC_WaitForLastOperation:00000068 $d
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:1400   .text.HAL_FLASH_OB_Launch:00000000 $t
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:1406   .text.HAL_FLASH_OB_Launch:00000000 HAL_FLASH_OB_Launch
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:1451   .text.HAL_FLASH_OB_Launch:00000028 $d
C:\Users\Timika\AppData\Local\Temp\ccqVm5Vu.s:1457   .bss.pFlash:00000000 $d

UNDEFINED SYMBOLS
FLASH_Erase_Sector
HAL_GetTick
